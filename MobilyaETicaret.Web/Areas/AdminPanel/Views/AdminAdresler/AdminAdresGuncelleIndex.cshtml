
@model Tuple<List<Iller>, List<Ilceler>, Adresler, int?, int?>


<div class="content-header">
    <div class="container-fluid">
        <div class="row mb-2">
            <div class="col-sm-6">
            </div>
            <div class="col-sm-6">
                <ol class="breadcrumb float-sm-right">
                    <li class="breadcrumb-item"><a href="~/AdminPanel/AdminAdresler/AdminAdreslerIndex">Adres Listesi</a></li>
                    <li class="breadcrumb-item active">Adres Güncelle</li>
                </ol>
            </div><!-- /.col -->
        </div><!-- /.row -->
    </div><!-- /.container-fluid -->
</div>
<!-- /.content-header -->
<!-- Main content -->

<section class="content">
    <div class="container-fluid">
        <div class="row">
            <div class="col-md-12">
                <div class="card card-primary">
                    <div class="card-header">
                        <h3 class="card-title">ADRES GÜNCELLE</h3>
                    </div>
                    <form asp-action="AdminAdresGuncelleIndex" id="adresGuncelleIndex" asp-controller="AdminAdresler" method="post">

                        <div class="card-body">

                            <div class="form-group col-md-6">
                                <label asp-for="AdresBasligi">Adres Başlığı</label>
                                <input name="AdresBasligi" asp-for="AdresBasligi" type="text" class="form-control" value="@Model.Item3.AdresBasligi" placeholder="Adres Başlığı">
                                <span asp-validation-for="UrunAdi" class="text-danger"></span>
                            </div>

                            <div class="form-group col-md-6">

                                <label>İl Seçiniz</label>
                                <select name="IlKodu" asp-for="IlKodu" id="ilId" class="form-control">
                                    <option value=""></option>
                                    @foreach (var item in Model.Item1)
                                    {
                                        <option value="@item.IlKodu" @(item.IlKodu == Model.Item4 ? "selected" : "")>@item.IlAdi</option>
                                    }
                                </select>
                                <span asp-validation-for="IlKodu" class="text-danger"></span>
                            </div>

                            <div class="form-group col-md-6">
                                <label>İlçe Seçiniz</label>
                                <select name="IlceKodu" asp-for="IlceKodu" id="ilceDropdown" class="form-control">
                                    <option value=""></option>
                                    @foreach (var item in Model.Item2)
                                    {
                                        <option value="@item.IlceKodu" @(item.IlceKodu == Model.Item5 ? "selected" : "")>@item.IlceAdi</option>
                                    }
                                </select>
                                <span asp-validation-for="IlceKodu" class="text-danger"></span>
                            </div>

                            
                            <div class="form-group col-md-6">
                            <label asp-for="">Adres</label>
                            <textarea name="Adres" asp-for="Adres" class="form-control" rows="3" placeholder="Adresi yazınız">@Model.Item3.Adres</textarea>
                            <span asp-validation-for="Adres" class="text-danger"></span>
                            </div>

                            <div class="form-group col-md-6">
                                <label asp-for="">Posta Kodu</label>
                                <input name="PostaKodu" asp-for="PostaKodu" type="text" value="@Model.Item3.PostaKodu" class="form-control" placeholder="Posta kodunu giriniz">
                                <span asp-validation-for="PostaKodu" class="text-danger"></span>
                            </div>
                            <div class="form-group">
                                @Html.LabelFor(model => model.Item3.AktifMi, htmlAttributes: new { @class = "control-label col-md-2" })
                                <div class="col-md-10">
                                    <div class="checkbox">
                                        @Html.EditorFor(model => model.Item3.AktifMi)
                                        @Html.ValidationMessageFor(model => model.Item3.AktifMi, "", new { @class = "text-danger" })
                                    </div>
                                </div>
                            </div>

                            <div class="card-footer">
                                <input type="submit" class="btn btn-success" value="Adres Güncelle" />
                            </div>
                        </div>
                    </form>
                    @Html.Raw(TempData["mesaj"])
                </div>
            </div>
        </div>
    </div>
</section>

@section addBottomLibrary {

    <script src="~/AdminLTE/plugins/jquery-validation/jquery.validate.js"></script>
    <script>

        $(document).ready(function () {
            $('#ilId').change(function () {
                var secilenIl = $("#ilId").val();              
                debugger;
                $.ajax({
                    url: "/AdminAdresler/GetIlveIlce",
                    type: 'POST',
                    data: { ilId: secilenIl },
                    success: function (data) {
                        var ilceDropdown = $('#ilceDropdown');
                        debugger;
                        ilceDropdown.empty();
                        ilceDropdown.append('<option value="">İlçe Seçiniz...</option>');
                        $.each(data, function (index, ilce) {
                            ilceDropdown.append($('<option></option>').val(ilce.value).html(ilce.text));
                        });
                    }
                   
                });
            });
        });


        $(function () {

            $('#adresKaydetIndex').validate({
                rules: {
                    makaleKategori: {
                        required: true
                    },
                    makaleBaslik: {
                        required: true
                    },
                    makaleIcerik: {
                        required: true
                    }

                },
                errorElement: 'span',
                errorPlacement: function (error, element) {
                    error.addClass('invalid-feedback');
                    element.closest('.form-group').append(error);
                },
                highlight: function (element, errorClass, validClass) {
                    $(element).addClass('is-invalid');
                },
                unhighlight: function (element, errorClass, validClass) {
                    $(element).removeClass('is-invalid');
                }
            });
        });

    </script>
}
